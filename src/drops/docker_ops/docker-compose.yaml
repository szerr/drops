version: '3.4'

services:
  nginx:
    image: nginx:1.22
    restart: on-failure
    volumes:
      - ./volumes/nginx/ssl:/etc/nginx/ssl
      # acme.sh 的证书验证路径
      - ./volumes/nginx/well-known:/var/www/.well-known:ro
      # nginx 日志
      - ./var/log/nginx:/var/log/nginx
      # nginx 相关配置
      - ./servers/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./servers/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./servers/nginx/lib:/etc/nginx/lib:ro
      # 项目文件映射
      - ./release/html:/var/www/html:ro
    labels:
      # acme.sh 部署证书要用的标签
      - sh.acme.autoload.domain=drops
    ports:
      - 80:80
      - 443:443
      # depends_on:
      # nginx 依赖的服务写在这。这些服务启动后 nginx 开始启动。
      # - http_server

      # acme.sh:
      #   image: neilpang/acme.sh:latest
      #   command: daemon
      #   volumes:
      #     - ./volumes/acme.sh/acmeout:/acme.sh
      #     - ./volumes/nginx/well-known:/var/www/.well-known
      #     - /var/run/docker.sock:/var/run/docker.sock
      #     - ./servers/acme.sh/redeploy-ssl:/usr/bin/redeploy-ssl:ro
      #   environment:
      #     - DEPLOY_DOCKER_CONTAINER_LABEL=sh.acme.autoload.domain=drops
      #     - DEPLOY_DOCKER_CONTAINER_KEY_FILE=/etc/nginx/ssl/drops/key.pem
      #     - DEPLOY_DOCKER_CONTAINER_CERT_FILE="/etc/nginx/ssl/drops/cert.pem"
      #     - DEPLOY_DOCKER_CONTAINER_CA_FILE="/etc/nginx/ssl/drops/ca.pem"
      #     - DEPLOY_DOCKER_CONTAINER_FULLCHAIN_FILE="/etc/nginx/ssl/drops/full.pem"
      #     - DEPLOY_DOCKER_CONTAINER_RELOAD_CMD="nginx -g 'daemon on; master_process on;' -s reload" # service nginx force-reload 不会报错
      #   depends_on:
      #     - nginx
      # crond:
      #   # 定时任务的示例
      #   # 注意，如果需要 crontabs 实时生效，crontabs 下的文件所属用户必须是root，不然不会生效也不会报错。
      #   # 不需要实时生效的话，建议更改后重新 build。
      #   # alpine 的 crond fork 进程会自动切换到root，更改容器用户会导致 fork 失败。
      #   # periodic 的脚本因为是文件夹挂载，是更改后马上生效的。
      #   build:
      #     context: ./servers/crond # build 的工作目录
      #     dockerfile: Dockerfile # build 的 Dockerfile 文件名
      #   logging:
      #     options:
      #       max-size: "8m" # 保留日志大小
      #   volumes:
      #     # 如果需要定时任务登录其他服务器，比方说rsync异地备份的时候；配一个 key 和 known_hosts 在这里。
      #     # - ./crond/known_hosts:/root/.ssh/known_hosts:ro
      #     # - ./crond/id_ed25519:/root/.ssh/id_ed25519:ro
      #     # 想要在运行时自定义crontabs，取消下面注释。
      #     # - ./crond/crontabs:/var/spool/cron/crontabs:ro
      #     # 不同时间间隔执行的脚本。
      #     - ./servers/crond/periodic:/etc/periodic:ro
      #     # 设置和主机相同的时区。注意映射文件只有重启容器后才会生效。
      #     - /etc/localtime:/etc/localtime:ro
      #     - /etc/timezone:/etc/timezone:ro
      #     # 需要的可执行文件映射。
      #     - ./servers/crond/bin:/usr/local/bin:ro
      #     # 配合 crond 目录里，有关定时增量备份的示例配置。
      #     - /srv/backup:/backup
      #   restart: always
